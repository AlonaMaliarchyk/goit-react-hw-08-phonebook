{"version":3,"file":"static/js/932.ca368a05.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/initialState.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/FilterContacts/Filter.module.css?7ad1","components/FilterContacts/Filter.js","components/Contacts/Contacts.jsx","components/Page/ContactsPage/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Page/LoginPage/Form.module.css?1613"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"delBtn\":\"ContactItem_delBtn__1B6Ri\",\"contactItem\":\"ContactItem_contactItem__Z4FuP\"};","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, id }) => {\n    const dispatch = useDispatch();\n    const deleteHandler = (id) => {\n        dispatch(deleteContact(id));\n    }\n\n    return (\n        <tr className={css.contactItem}>\n            <td>{name} &nbsp;</td>\n            <td>{number}&nbsp;</td>\n            <td>\n              <button className={css.delBtn}\n                type=\"button\"\n                onClick={() => deleteHandler(id)}>\n                <i aria-hidden=\"true\" className=\"trash alternate icon\"></i>\n                </button>\n            </td>\n        </tr>\n    )\n}\n\nContactItem.propTypes = {\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n}\n\nexport default ContactItem;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactItem from \"../ContactItem\";\nimport { fetchContacts } from \"../../redux/contacts/operations\";\nimport {  selectFilteredContacts } from 'redux/selector';\n\nconst ContactList = () => {\n    const contacts = useSelector(selectFilteredContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    },\n        [dispatch]\n    );\n\n    return (\n    <div>\n        <table>\n          <tbody>\n            {contacts.map((contact) => (\n                <ContactItem\n                    key={contact.id}\n                    id={contact.id}\n                    name={contact.name}\n                    number={contact.number} />\n            ))}\n          </tbody>\n        </table>\n    </div>\n    )\n}\n\nexport default ContactList;\n","const InitialState = {\n    name: \"eeee\",\n    email: \"ccc\",\n    password: \"8888\",\n}\nexport default InitialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__Bl93P\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import { useState } from \"react\";\nimport InitialState from './initialState.js';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectContacts } from \"redux/selector.js\";\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const [, setState] = useState({ ...InitialState });\n    const contacts = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        const isExists = contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n        if (isExists) {\n            alert(name + ' is already in contacts');\n            return;\n        }\n        dispatch(addContact({ name: name, number: number }));\n        form.reset();\n    }\n\n    const handlerChange = ({target}) => {\n        const { name, value } = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className={css.wrapInput}>\n            <label>Name </label>\n                    <input className={css.input}\n                    type=\"text\"\n                    onChange={handlerChange}\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n                <label>\n                    Number\n                </label>\n                    <input className={css.input}\n                    type=\"tel\"\n                    onChange={handlerChange}\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    />\n                <button className={css.addBtn} type=\"submit\">Add contact</button>\n        </form>\n    )\n}\n\nexport default ContactForm;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__pxg9Q\",\"filterWrap\":\"Filter_filterWrap__6osAr\"};","import { useDispatch } from \"react-redux\";\nimport { setStatusFilter } from \"../../redux/filter/filtersSlice\";\nimport css from './Filter.module.css';\n\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const setFilter = (filter) => {\n        dispatch(setStatusFilter(filter));\n    }\n    return (\n        <div className={css.filterWrap}>\n           <label>Find a contact by name </label>\n            <input className={css.input}\n                type=\"text\"\n                onChange={(event)=>setFilter(event.target.value)}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n            />\n        </div>\n    )\n}\n\nexport default Filter;\n","import ContactList from \"components/ContactList\";\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/FilterContacts/Filter\";\nimport css from \"../Page/LoginPage/Form.module.css\";\n\nconst Contacts = () => {\n    return (\n        <div className={css.form}>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div>\n    )\n}\nexport default Contacts;","import Contacts from \"../../Contacts/Contacts\"\nconst ContactsPage = () => {\n    return (\n        <>\n            <Contacts/>\n        </>\n    )\n}\nexport default ContactsPage;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__VyJzw\",\"btn\":\"Form_btn__PhgFt\"};"],"names":["name","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","deleteHandler","contacts","useSelector","selectFilteredContacts","useEffect","fetchContacts","map","contact","email","password","useState","InitialState","setState","selectContacts","handlerChange","target","value","prevState","onSubmit","event","preventDefault","form","elements","some","toLowerCase","alert","addContact","reset","onChange","pattern","title","required","filter","setStatusFilter"],"sourceRoot":""}